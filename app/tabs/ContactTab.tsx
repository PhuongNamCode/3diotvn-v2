"use client";

import { useState } from "react";
import { useContacts } from "@/lib/hooks/useData";

export default function ContactTab() {
  const { createContact } = useContacts();
  const [activeForm, setActiveForm] = useState<'partnership' | 'support'>('partnership');
  const [submitting, setSubmitting] = useState<boolean>(false);
  const [success, setSuccess] = useState<boolean>(false);
  const [error, setError] = useState<string | null>(null);

  async function onSubmit(formData: FormData) {
    // Get selected support categories if it's support form
    let supportCategories: string[] = [];
    if (activeForm === 'support') {
      const checkboxes = document.querySelectorAll('input[name="supportCategory"]:checked') as NodeListOf<HTMLInputElement>;
      supportCategories = Array.from(checkboxes).map(cb => cb.value);
      
      // Validate that at least one category is selected
      if (supportCategories.length === 0) {
        setError("Vui l√≤ng ch·ªçn √≠t nh·∫•t m·ªôt n·ªôi dung h·ªó tr·ª£");
        return;
      }
    }

    // Build message with support categories if applicable
    let message = String(formData.get("details") || "");
    if (activeForm === 'support' && supportCategories.length > 0) {
      const categoryLabels = {
        'iot-deployment': 'Tri·ªÉn khai gi·∫£i ph√°p IoT',
        'hardware-design': 'Thi·∫øt k·∫ø ph·∫ßn c·ª©ng',
        'software-design': 'Thi·∫øt k·∫ø ph·∫ßn m·ªÅm',
        'technical-issues': 'V·∫•n ƒë·ªÅ k·ªπ thu·∫≠t',
        'other': 'Kh√°c'
      };
      
      const selectedLabels = supportCategories.map(cat => categoryLabels[cat as keyof typeof categoryLabels] || cat);
      message = `N·ªôi dung h·ªó tr·ª£: ${selectedLabels.join(', ')}\n\nM√¥ t·∫£ chi ti·∫øt:\n${message}`;
    }

    const payload = {
      name: String(formData.get("fullName") || ""),
      email: String(formData.get("email") || ""),
      phone: String(formData.get("phone") || ""),
      company: String(formData.get("organization") || ""),
      role: "Contact",
      message: message,
      type: activeForm === 'partnership' ? "partnership" as const : "support" as const,
      status: "new" as const,
      priority: "medium" as const,
      notes: supportCategories.length > 0 ? supportCategories : []
    };
    setSubmitting(true);
    setSuccess(false);
    setError(null);
    try {
      await createContact(payload);
      setSuccess(true);
    } catch (e: any) {
      setError(e?.message || "C√≥ l·ªói x·∫£y ra");
    } finally {
      setSubmitting(false);
    }
  }

  return (
    <div className="container">
      {/* Hero Banner Section */}
      <section className="contact-hero">
        <div className="contact-hero-content">
          <div className="contact-hero-text">
            <h1>
              <span style={{ color: 'var(--accent)' }}>Li√™n h·ªá</span> h·ªó tr·ª£ & h·ª£p t√°c
            </h1>
            <p className="contact-hero-description">
              Ch√∫ng t√¥i lu√¥n s·∫µn s√†ng h·ªó tr·ª£ v√† h·ª£p t√°c ƒë·ªÉ ph√°t tri·ªÉn c·ªông ƒë·ªìng IoT. 
              H√£y k·∫øt n·ªëi v·ªõi ch√∫ng t√¥i ƒë·ªÉ c√πng t·∫°o ra nh·ªØng gi√° tr·ªã tuy·ªát v·ªùi.
            </p>
          </div>
          <div className="contact-hero-visual">
            <div className="contact-features">
              <div className="feature-card">
                <i className="fas fa-handshake"></i>
                <h4>H·ª£p t√°c</h4>
                <p>D·ª± √°n chung</p>
              </div>
              <div className="feature-card">
                <i className="fas fa-headset"></i>
                <h4>H·ªó tr·ª£</h4>
                <p>Gi·∫£i ƒë√°p th·∫Øc m·∫Øc</p>
              </div>
              <div className="feature-card">
                <i className="fas fa-users"></i>
                <h4>C·ªông ƒë·ªìng</h4>
                <p>K·∫øt n·ªëi m·∫°ng l∆∞·ªõi</p>
              </div>
              <div className="feature-card">
                <i className="fas fa-lightbulb"></i>
                <h4>ƒê·ªïi m·ªõi</h4>
                <p>√ù t∆∞·ªüng s√°ng t·∫°o</p>
              </div>
            </div>
          </div>
        </div>
      </section>

      {/* Form Navigation Tabs */}
      <div className="contact-form-tabs">
        <button 
          className={`form-tab ${activeForm === 'partnership' ? 'active' : ''}`}
          onClick={() => setActiveForm('partnership')}
        >
          <i className="fas fa-handshake"></i>
          <span>Li√™n h·ªá h·ª£p t√°c</span>
        </button>
        <button 
          className={`form-tab ${activeForm === 'support' ? 'active' : ''}`}
          onClick={() => setActiveForm('support')}
        >
          <i className="fas fa-headset"></i>
          <span>Li√™n h·ªá h·ªó tr·ª£</span>
        </button>
      </div>

      <form className="contact-form" onSubmit={(e) => { e.preventDefault(); onSubmit(new FormData(e.currentTarget)); }}>

        {!success ? (
          <>
            <div className="contact-form-header">
              <h2>
                {activeForm === 'partnership' ? 'ü§ù Th√¥ng tin h·ª£p t√°c' : 'üéß Th√¥ng tin h·ªó tr·ª£'}
              </h2>
              <p>
                {activeForm === 'partnership' 
                  ? 'Vui l√≤ng ƒëi·ªÅn ƒë·∫ßy ƒë·ªß th√¥ng tin v·ªÅ d·ª± √°n h·ª£p t√°c ƒë·ªÉ ch√∫ng t√¥i c√≥ th·ªÉ li√™n h·ªá l·∫°i v·ªõi b·∫°n'
                  : 'Vui l√≤ng ƒëi·ªÅn ƒë·∫ßy ƒë·ªß th√¥ng tin v·ªÅ v·∫•n ƒë·ªÅ c·∫ßn h·ªó tr·ª£ ƒë·ªÉ ch√∫ng t√¥i c√≥ th·ªÉ h·ªó tr·ª£ b·∫°n t·ªët nh·∫•t'
                }
              </p>
            </div>
            
            <div className="contact-grid">
              <div className="form-group">
                <label htmlFor="fullName">H·ªç v√† t√™n *</label>
                <input type="text" id="fullName" name="fullName" placeholder="VD: Nguy·ªÖn VƒÉn A" required />
              </div>
              <div className="form-group">
                <label htmlFor="email">Email *</label>
                <input type="email" id="email" name="email" placeholder="you@company.com" required />
              </div>
              <div className="form-group">
                <label htmlFor="phone">S·ªë ƒëi·ªán tho·∫°i *</label>
                <input type="tel" id="phone" name="phone" placeholder="VD: 0901 234 567" required />
              </div>
              <div className="form-group">
                <label htmlFor="organization">ƒê∆°n v·ªã/T·ªï ch·ª©c *</label>
                <input type="text" id="organization" name="organization" placeholder="T√™n c√¥ng ty/Tr∆∞·ªùng h·ªçc" required />
              </div>
              {activeForm === 'support' && (
                <div className="form-group col-span-2">
                  <label>N·ªôi dung h·ªó tr·ª£ *</label>
                  <div className="support-categories">
                    <label className="checkbox-label">
                      <input type="checkbox" name="supportCategory" value="iot-deployment" />
                      <span className="checkmark"></span>
                      <div className="label-content">
                        <i className="fas fa-network-wired category-icon"></i>
                        <span className="label-text">Tri·ªÉn khai gi·∫£i ph√°p IoT</span>
                      </div>
                    </label>
                    <label className="checkbox-label">
                      <input type="checkbox" name="supportCategory" value="hardware-design" />
                      <span className="checkmark"></span>
                      <div className="label-content">
                        <i className="fas fa-microchip category-icon"></i>
                        <span className="label-text">Thi·∫øt k·∫ø ph·∫ßn c·ª©ng</span>
                      </div>
                    </label>
                    <label className="checkbox-label">
                      <input type="checkbox" name="supportCategory" value="software-design" />
                      <span className="checkmark"></span>
                      <div className="label-content">
                        <i className="fas fa-code category-icon"></i>
                        <span className="label-text">Thi·∫øt k·∫ø ph·∫ßn m·ªÅm</span>
                      </div>
                    </label>
                    <label className="checkbox-label">
                      <input type="checkbox" name="supportCategory" value="technical-issues" />
                      <span className="checkmark"></span>
                      <div className="label-content">
                        <i className="fas fa-tools category-icon"></i>
                        <span className="label-text">V·∫•n ƒë·ªÅ k·ªπ thu·∫≠t</span>
                      </div>
                    </label>
                    <label className="checkbox-label">
                      <input type="checkbox" name="supportCategory" value="other" />
                      <span className="checkmark"></span>
                      <div className="label-content">
                        <i className="fas fa-ellipsis-h category-icon"></i>
                        <span className="label-text">Kh√°c</span>
                      </div>
                    </label>
                  </div>
                </div>
              )}
              
              <div className="form-group col-span-2">
                <label htmlFor="details">
                  {activeForm === 'partnership' ? 'Th√¥ng tin chi ti·∫øt v·ªÅ h·ª£p t√°c *' : 'M√¥ t·∫£ chi ti·∫øt y√™u c·∫ßu h·ªó tr·ª£ *'}
                </label>
                <textarea 
                  id="details" 
                  name="details" 
                  placeholder={
                    activeForm === 'partnership' 
                      ? "M√¥ t·∫£ m·ª•c ti√™u, ph·∫°m vi, th·ªùi gian d·ª± ki·∫øn, ng√¢n s√°ch, l·ª£i √≠ch mong mu·ªën..."
                      : "M√¥ t·∫£ chi ti·∫øt v·∫•n ƒë·ªÅ, l·ªói g·∫∑p ph·∫£i, thi·∫øt b·ªã s·ª≠ d·ª•ng, b∆∞·ªõc ƒë√£ th·ª≠..."
                  }
                  required
                ></textarea>
              </div>
            </div>
            
            {error && (
              <div className="error-message">
                <i className="fas fa-exclamation-triangle"></i>
                <span>{error}</span>
              </div>
            )}
            
            <div className="form-actions">
              <button type="submit" className="btn-submit" disabled={submitting}>
                {submitting ? (
                  <>
                    <i className="fas fa-spinner fa-spin"></i>
                    ƒêang g·ª≠i...
                  </>
                ) : (
                  <>
                    <i className="fas fa-paper-plane"></i>
                    {activeForm === 'partnership' ? 'G·ª≠i th√¥ng tin h·ª£p t√°c' : 'G·ª≠i y√™u c·∫ßu h·ªó tr·ª£'}
                  </>
                )}
              </button>
            </div>
          </>
        ) : (
          <div className="success-message">
            <div className="success-icon">
              <i className="fas fa-check-circle"></i>
            </div>
            <h3>üéâ G·ª≠i th√†nh c√¥ng!</h3>
            <p>
              {activeForm === 'partnership' 
                ? 'C·∫£m ∆°n b·∫°n ƒë√£ quan t√¢m ƒë·∫øn h·ª£p t√°c v·ªõi ch√∫ng t√¥i. Ch√∫ng t√¥i s·∫Ω li√™n h·ªá l·∫°i trong v√≤ng 24 gi·ªù.'
                : 'C·∫£m ∆°n b·∫°n ƒë√£ g·ª≠i y√™u c·∫ßu h·ªó tr·ª£. Ch√∫ng t√¥i s·∫Ω ph·∫£n h·ªìi trong v√≤ng 12 gi·ªù.'
              }
            </p>
            <button className="btn-primary" onClick={() => setSuccess(false)}>
              <i className="fas fa-plus"></i>
              G·ª≠i y√™u c·∫ßu kh√°c
            </button>
          </div>
        )}
      </form>
    </div>
  );
}


