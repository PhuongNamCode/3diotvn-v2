"use client";

import { useState } from "react";
import { useContacts } from "@/lib/hooks/useData";

export default function ContactTab() {
  const { createContact } = useContacts();
  const [submitting, setSubmitting] = useState<boolean>(false);
  const [success, setSuccess] = useState<boolean>(false);
  const [error, setError] = useState<string | null>(null);

  async function onSubmit(formData: FormData) {
    const payload = {
      name: String(formData.get("fullName") || ""),
      email: String(formData.get("email") || ""),
      phone: String(formData.get("phone") || ""),
      company: String(formData.get("organization") || ""),
      role: "Contact",
      message: String(formData.get("details") || ""),
      type: "partnership" as const,
      status: "new" as const,
      priority: "medium" as const,
      notes: []
    };
    setSubmitting(true);
    setSuccess(false);
    setError(null);
    try {
      await createContact(payload);
      setSuccess(true);
    } catch (e: any) {
      setError(e?.message || "C√≥ l·ªói x·∫£y ra");
    } finally {
      setSubmitting(false);
    }
  }

  return (
    <div className="container">
      {/* Hero Banner Section */}
      <section className="contact-hero">
        <div className="contact-hero-content">
          <div className="contact-hero-text">
            <h1>
              <span style={{ color: 'var(--accent)' }}>Li√™n h·ªá</span> h·ª£p t√°c
            </h1>
            <p className="contact-hero-description">
              Ch√∫ng t√¥i lu√¥n ch√†o ƒë√≥n c√°c ƒë·ªëi t√°c v√† c∆° h·ªôi h·ª£p t√°c ƒë·ªÉ ph√°t tri·ªÉn c·ªông ƒë·ªìng IoT. 
              H√£y k·∫øt n·ªëi v·ªõi ch√∫ng t√¥i ƒë·ªÉ c√πng t·∫°o ra nh·ªØng gi√° tr·ªã tuy·ªát v·ªùi.
            </p>
          </div>
          <div className="contact-hero-visual">
            <div className="contact-features">
              <div className="feature-card">
                <i className="fas fa-handshake"></i>
                <h4>H·ª£p t√°c</h4>
                <p>D·ª± √°n chung</p>
              </div>
              <div className="feature-card">
                <i className="fas fa-users"></i>
                <h4>C·ªông ƒë·ªìng</h4>
                <p>K·∫øt n·ªëi m·∫°ng l∆∞·ªõi</p>
              </div>
              <div className="feature-card">
                <i className="fas fa-lightbulb"></i>
                <h4>ƒê·ªïi m·ªõi</h4>
                <p>√ù t∆∞·ªüng s√°ng t·∫°o</p>
              </div>
              <div className="feature-card">
                <i className="fas fa-rocket"></i>
                <h4>Ph√°t tri·ªÉn</h4>
                <p>Th√∫c ƒë·∫©y tƒÉng tr∆∞·ªüng</p>
              </div>
            </div>
          </div>
        </div>
      </section>

      <form className="contact-form" onSubmit={(e) => { e.preventDefault(); onSubmit(new FormData(e.currentTarget)); }}>

        {!success ? (
          <>
            <div className="contact-form-header">
              <h2>üìù Th√¥ng tin li√™n h·ªá</h2>
              <p>Vui l√≤ng ƒëi·ªÅn ƒë·∫ßy ƒë·ªß th√¥ng tin ƒë·ªÉ ch√∫ng t√¥i c√≥ th·ªÉ li√™n h·ªá l·∫°i v·ªõi b·∫°n</p>
            </div>
            
            <div className="contact-grid">
              <div className="form-group">
                <label htmlFor="fullName">H·ªç v√† t√™n *</label>
                <input type="text" id="fullName" name="fullName" placeholder="VD: Nguy·ªÖn VƒÉn A" required />
              </div>
              <div className="form-group">
                <label htmlFor="email">Email *</label>
                <input type="email" id="email" name="email" placeholder="you@company.com" required />
              </div>
              <div className="form-group">
                <label htmlFor="phone">S·ªë ƒëi·ªán tho·∫°i *</label>
                <input type="tel" id="phone" name="phone" placeholder="VD: 0901 234 567" required />
              </div>
              <div className="form-group">
                <label htmlFor="organization">ƒê∆°n v·ªã/T·ªï ch·ª©c *</label>
                <input type="text" id="organization" name="organization" placeholder="T√™n c√¥ng ty/Tr∆∞·ªùng h·ªçc" required />
              </div>
              <div className="form-group col-span-2">
                <label htmlFor="details">Th√¥ng tin chi ti·∫øt v·ªÅ h·ª£p t√°c *</label>
                <textarea id="details" name="details" placeholder="M√¥ t·∫£ m·ª•c ti√™u, ph·∫°m vi, th·ªùi gian d·ª± ki·∫øn..." required></textarea>
              </div>
            </div>
            
            {error && (
              <div className="error-message">
                <i className="fas fa-exclamation-triangle"></i>
                <span>{error}</span>
              </div>
            )}
            
            <div className="form-actions">
              <button type="submit" className="btn-submit" disabled={submitting}>
                {submitting ? (
                  <>
                    <i className="fas fa-spinner fa-spin"></i>
                    ƒêang g·ª≠i...
                  </>
                ) : (
                  <>
                    <i className="fas fa-paper-plane"></i>
                    G·ª≠i th√¥ng tin h·ª£p t√°c
                  </>
                )}
              </button>
            </div>
          </>
        ) : (
          <div className="success-message">
            <div className="success-icon">
              <i className="fas fa-check-circle"></i>
            </div>
            <h3>üéâ G·ª≠i th√†nh c√¥ng!</h3>
            <p>C·∫£m ∆°n b·∫°n ƒë√£ li√™n h·ªá v·ªõi ch√∫ng t√¥i. Ch√∫ng t√¥i s·∫Ω ph·∫£n h·ªìi trong v√≤ng 24 gi·ªù.</p>
            <button className="btn-primary" onClick={() => setSuccess(false)}>
              <i className="fas fa-plus"></i>
              G·ª≠i y√™u c·∫ßu kh√°c
            </button>
          </div>
        )}
      </form>
    </div>
  );
}


